##Events managing the resource system - basicaly disable resources factories when lacking of raw resources.
add_namespace = resource_production
country_event = {
	#not enough iron or coal to produce steel, close a steel mill
	id = resource_production.1
	title = resource_production.1.t
	desc = resource_production.1.d
	picture = GFX_report_event_election_vote
	trigger = {
		OR = {
			check_variable = {
				resource@iron < 0
			}
			check_variable = {
				resource@coal < 0
			}
		}
		any_controlled_state = {
			steel_refinery > 0
		}
	}
	is_triggered_only = yes
	option = {
		# close it
		name = resource_production.1.a
		IF = {
			limit = {
				any_controlled_state = {
					steel_refinery > 7
					NOT = {
						is_owned_by = ROOT
					}
				}
				OR = {
					check_variable = {
						resource@iron < -199
					}
					check_variable = {
						resource@coal < -199
					}
				}
			}
			random_controlled_state = {
				limit = {
					steel_refinery > 7
					NOT = {
						is_owned_by = ROOT
					}
				}
				remove_building = {
					type = steel_refinery
					level = 8
				}
				add_building_construction = {
					type = steel_refinery_inactive
					level = 8
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					steel_refinery > 3
					NOT = {
						is_owned_by = ROOT
					}
				}
				OR = {
					check_variable = {
						resource@iron < -99
					}
					check_variable = {
						resource@coal < -99
					}
				}
			}
			random_controlled_state = {
				limit = {
					steel_refinery > 3
					NOT = {
						is_owned_by = ROOT
					}
				}
				remove_building = {
					type = steel_refinery
					level = 4
				}
				add_building_construction = {
					type = steel_refinery_inactive
					level = 4
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					steel_refinery > 1
					NOT = {
						is_owned_by = ROOT
					}
				}
				OR = {
					check_variable = {
						resource@iron < -49
					}
					check_variable = {
						resource@coal < -49
					}
				}
			}
			random_controlled_state = {
				limit = {
					steel_refinery > 1
					NOT = {
						is_owned_by = ROOT
					}
				}
				remove_building = {
					type = steel_refinery
					level = 2
				}
				add_building_construction = {
					type = steel_refinery_inactive
					level = 2
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					steel_refinery > 0
					NOT = {
						is_owned_by = ROOT
					}
				}
				OR = {
					check_variable = {
						resource@iron < 0
					}
					check_variable = {
						resource@coal < 0
					}
				}
			}
			random_controlled_state = {
				limit = {
					steel_refinery > 0
					NOT = {
						is_owned_by = ROOT
					}
				}
				remove_building = {
					type = steel_refinery
					level = 1
				}
				add_building_construction = {
					type = steel_refinery_inactive
					level = 1
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					is_owned_by = ROOT
					steel_refinery > 7
				}
				OR = {
					check_variable = {
						resource@iron < -199
					}
					check_variable = {
						resource@coal < -199
					}
				}
			}
			random_owned_controlled_state = {
				limit = {
					steel_refinery > 7
				}
				remove_building = {
					type = steel_refinery
					level = 8
				}
				add_building_construction = {
					type = steel_refinery_inactive
					level = 8
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					is_owned_by = ROOT
					steel_refinery > 3
				}
				OR = {
					check_variable = {
						resource@iron < -99
					}
					check_variable = {
						resource@coal < -99
					}
				}
			}
			random_owned_controlled_state = {
				limit = {
					steel_refinery > 3
				}
				remove_building = {
					type = steel_refinery
					level = 4
				}
				add_building_construction = {
					type = steel_refinery_inactive
					level = 4
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					steel_refinery > 1
					is_owned_by = ROOT
				}
				OR = {
					check_variable = {
						resource@iron < -49
					}
					check_variable = {
						resource@coal < -49
					}
				}
			}
			random_owned_controlled_state = {
				limit = {
					steel_refinery > 1
				}
				remove_building = {
					type = steel_refinery
					level = 2
				}
				add_building_construction = {
					type = steel_refinery_inactive
					level = 2
					instant_build = yes
				}
			}
		}
		ELSE = {
			random_owned_controlled_state = {
				limit = {
					steel_refinery > 0
				}
				remove_building = {
					type = steel_refinery
					level = 1
				}
				add_building_construction = {
					type = steel_refinery_inactive
					level = 1
					instant_build = yes
				}
			}
		}
	}
}

country_event = {
	#not enough bauxite or coal to produce aluminium, close an aluminium smelter
	id = resource_production.2
	title = resource_production.2.t
	desc = resource_production.2.d
	picture = GFX_report_event_election_vote
	trigger = {
		OR = {
			check_variable = {
				resource@bauxite < 0
			}
			check_variable = {
				resource@coal < 0
			}
		}
		any_controlled_state = {
			aluminium_refinery > 0
		}
	}
	is_triggered_only = yes
	option = {
		# close it
		name = resource_production.2.a
		IF = {
			limit = {
				any_controlled_state = {
					aluminium_refinery > 7
					NOT = {
						is_owned_by = ROOT
					}
				}
				OR = {
					check_variable = {
						resource@bauxite < -199
					}
					check_variable = {
						resource@coal < -199
					}
				}
			}
			random_controlled_state = {
				limit = {
					aluminium_refinery > 7
					NOT = {
						is_owned_by = ROOT
					}
				}
				remove_building = {
					type = aluminium_refinery
					level = 8
				}
				add_building_construction = {
					type = aluminium_refinery_inactive
					level = 8
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					aluminium_refinery > 3
					NOT = {
						is_owned_by = ROOT
					}
				}
				OR = {
					check_variable = {
						resource@bauxite < -99
					}
					check_variable = {
						resource@coal < -99
					}
				}
			}
			random_controlled_state = {
				limit = {
					aluminium_refinery > 3
					NOT = {
						is_owned_by = ROOT
					}
				}
				remove_building = {
					type = aluminium_refinery
					level = 4
				}
				add_building_construction = {
					type = aluminium_refinery_inactive
					level = 4
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					aluminium_refinery > 1
					NOT = {
						is_owned_by = ROOT
					}
				}
				OR = {
					check_variable = {
						resource@bauxite < -49
					}
					check_variable = {
						resource@coal < -49
					}
				}
			}
			random_controlled_state = {
				limit = {
					aluminium_refinery > 1
					NOT = {
						is_owned_by = ROOT
					}
				}
				remove_building = {
					type = aluminium_refinery
					level = 2
				}
				add_building_construction = {
					type = aluminium_refinery_inactive
					level = 2
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					aluminium_refinery > 0
					NOT = {
						is_owned_by = ROOT
					}
				}
			}
			random_controlled_state = {
				limit = {
					aluminium_refinery > 1
					NOT = {
						is_owned_by = ROOT
					}
				}
				remove_building = {
					type = aluminium_refinery
					level = 1
				}
				add_building_construction = {
					type = aluminium_refinery_inactive
					level = 1
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					aluminium_refinery > 7
					is_owned_by = ROOT
				}
				OR = {
					check_variable = {
						resource@bauxite < -199
					}
					check_variable = {
						resource@coal < -199
					}
				}
			}
			random_owned_controlled_state = {
				limit = {
					aluminium_refinery > 7
				}
				remove_building = {
					type = aluminium_refinery
					level = 8
				}
				add_building_construction = {
					type = aluminium_refinery_inactive
					level = 8
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					aluminium_refinery > 3
					is_owned_by = ROOT
				}
				OR = {
					check_variable = {
						resource@bauxite < -99
					}
					check_variable = {
						resource@coal < -99
					}
				}
			}
			random_owned_controlled_state = {
				limit = {
					aluminium_refinery > 3
				}
				remove_building = {
					type = aluminium_refinery
					level = 4
				}
				add_building_construction = {
					type = aluminium_refinery_inactive
					level = 4
					instant_build = yes
				}
			}
		}
		ELSE_IF = {
			limit = {
				any_controlled_state = {
					aluminium_refinery > 1
					is_owned_by = ROOT
				}
				OR = {
					check_variable = {
						resource@bauxite < -49
					}
					check_variable = {
						resource@coal < -49
					}
				}
			}
			random_owned_controlled_state = {
				limit = {
					aluminium_refinery > 1
				}
				remove_building = {
					type = aluminium_refinery
					level = 2
				}
				add_building_construction = {
					type = aluminium_refinery_inactive
					level = 2
					instant_build = yes
				}
			}
		}
		ELSE = {
			random_owned_controlled_state = {
				limit = {
					aluminium_refinery > 0
				}
				remove_building = {
					type = aluminium_refinery
					level = 1
				}
				add_building_construction = {
					type = aluminium_refinery_inactive
					level = 1
					instant_build = yes
				}
			}
		}
	}
}

country_event = {
	#not enough coal to produce fuel, close a synthetic reffinery
	id = resource_production.3
	title = resource_production.3.t
	desc = resource_production.3.d
	picture = GFX_report_event_election_vote
	trigger = {
		OR = {
			check_variable = {
				resource@coal < 0
			}
		}
		any_controlled_state = {
			synthetic_refinery > 0
		}
	}
	is_triggered_only = yes
	option = {
		# close it
		name = resource_production.3.a
		IF = {
			limit = {
				any_controlled_state = {
					synthetic_refinery > 0
					NOT = {
						is_owned_by = ROOT
					}
				}
			}
			random_controlled_state = {
				limit = {
					synthetic_refinery > 0
					NOT = {
						is_owned_by = ROOT
					}
				}
				remove_building = {
					type = synthetic_refinery
					level = 1
				}
				add_building_construction = {
					type = synthetic_refinery_inactive
					level = 1
					instant_build = yes
				}
			}
		}
		ELSE = {
			random_owned_controlled_state = {
				limit = {
					synthetic_refinery > 0
				}
				remove_building = {
					type = synthetic_refinery
					level = 1
				}
				add_building_construction = {
					type = synthetic_refinery_inactive
					level = 1
					instant_build = yes
				}
			}
		}
	}
}

country_event = {
	#not enough coal or oil to produce rubber, close a rubber reffinery
	id = resource_production.4
	title = resource_production.4.t
	desc = resource_production.4.d
	picture = GFX_report_event_election_vote
	trigger = {
		OR = {
			check_variable = {
				resource@coal < 0
			}
			check_variable = {
				resource@oil < 0
			}
		}
		any_controlled_state = {
			synthetic_rubber_refinery > 0
		}
	}
	is_triggered_only = yes
	option = {
		# close it
		name = resource_production.4.a
		IF = {
			limit = {
				any_controlled_state = {
					synthetic_rubber_refinery > 0
					NOT = {
						is_owned_by = ROOT
					}
				}
			}
			random_controlled_state = {
				limit = {
					synthetic_rubber_refinery > 0
					NOT = {
						is_owned_by = ROOT
					}
				}
				remove_building = {
					type = synthetic_rubber_refinery
					level = 1
				}
				add_building_construction = {
					type = synthetic_rubber_refinery_inactive
					level = 1
					instant_build = yes
				}
			}
		}
		ELSE = {
			random_owned_controlled_state = {
				limit = {
					synthetic_rubber_refinery > 0
				}
				remove_building = {
					type = synthetic_rubber_refinery
					level = 1
				}
				add_building_construction = {
					type = synthetic_rubber_refinery_inactive
					level = 1
					instant_build = yes
				}
			}
		}
	}
}
